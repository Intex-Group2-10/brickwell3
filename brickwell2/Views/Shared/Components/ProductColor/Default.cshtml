@* @model IQueryable<string> *@
@* *@
@* <div class="d-grid gap-2"> *@
@*     <a class="btn btn-outline-secondary" asp-controller="Home" asp-action="Products" asp-route-productCategory="" asp-route-pageNum="">All Products</a> *@
@* *@
@*     @foreach(string prod in Model ?? Enumerable.Empty<string>()) *@
@*     { *@
@*         <a class=" btn @(prod == ViewBag.SelectedProductCategory ? "checked" : "")" asp-controller="Home" asp-action="Products" asp-route-productCategory="@prod" asp-route-pageNum="1">@prod</a> *@
@*     } *@
@* </div> *@

<style>
    .d-grid {
        display: flex;
        flex-direction: column;
        align-items: flex-start; /* Align items to the start (left side) of the container */
        width: 100%; /* Full width to contain the checkboxes */
        padding-left: 35%; /* Adjust this to visually center the checkboxes in the container */
        box-sizing: border-box; /* Include padding in the width */
    }

    .custom-checkbox-label {
        display: block; /* Make each label a block element to occupy its own line */
        position: relative;
        cursor: pointer;
        padding-left: 25px; /* Space for the custom checkbox, adjust as needed */
        margin-bottom: 10px; /* Space between each item */
    }

    .primarycolor-checkbox {
        opacity: 0; /* Hide the checkbox */
        position: absolute; /* Take it out of document flow */
        z-index: -1; /* Put it behind the custom checkbox */
    }

    .custom-checkbox {
        width: 20px; /* Width of the custom checkbox */
        height: 20px; /* Height of the custom checkbox */
        background: #eee; /* Background color */
        border: 1px solid #dcdcdc; /* Border color */
        border-radius: 4px; /* Rounded corners */
        margin-right: 10px; /* Space between the checkbox and the label text */
        cursor: pointer;
        /* Center the pseudo-element vertically */
        position: absolute;
        left: 0; /* Align to the left edge of the label */
        top: 50%;
        transform: translateY(-50%);
    }

    .primarycolor-checkbox:checked + .custom-checkbox {
        background-color: #007bff; /* Background color when checked */
    }

    .primarycolor-checkbox:checked + .custom-checkbox::after {
            content: '';
            position: absolute;
            left: 5px;
            top: 50%;
            transform: translate(-50%, -50%) rotate(45deg); /* Center the checkmark */
            width: 6px;
            height: 11px;
            border: solid white;
            border-width: 0 2px 2px 0;
        }

</style>


<div class="d-grid gap-2">

    <h4>Colors</h4>

    @foreach (string prod in Model ?? Enumerable.Empty<string>())
    {
        <label class="custom-checkbox-label">
            @* <a class="btn btn-outline-secondary" asp-controller="Home" asp-action="Index" asp-route-productcategory="@prod" asp-route-pageNum="1">@prod</a> *@
            <input type="checkbox" class="primarycolor-checkbox" data-primarycolor="@prod" @(prod == ViewBag.SelectedProductprimarycolor ? "checked" : "") />@prod
            <span class="custom-checkbox"></span> <!-- Custom checkbox -->
        </label>
    }
</div>

<script>
    document.querySelectorAll('.primarycolor-checkbox').forEach(function (checkbox) {
        checkbox.addEventListener('change', function () {
            var selectedprimarycolor = [];
            document.querySelectorAll('.primarycolor-checkbox:checked').forEach(function (checked) {
                selectedprimarycolor.push(checked.getAttribute('data-primarycolor'));
            });
            var primarycolorParam = selectedprimarycolor.join(',');
            window.location.href = '@Url.Action("Products", "Home")?productPrimaryColor=' + primarycolorParam + '&pageNum=1';

        });
    });
</script>